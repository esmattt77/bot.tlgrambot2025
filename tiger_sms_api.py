import requests
import json
import os
import logging

# ุฅุนุฏุงุฏ logging ูุทุจุงุนุฉ ุงูุฃุฎุทุงุก ูู ุงูุณุฌู
logger = logging.getLogger(__name__)

API_KEY = os.environ.get('TIGER_SMS_API_KEY')
BASE_URL = 'https://api.tiger-sms.com/stubs/handler_api.php'

class TigerSMSAPI:
    def __init__(self, api_key):
        self.api_key = api_key
        
    def _make_request(self, params):
        params['api_key'] = self.api_key
        try:
            response = requests.get(BASE_URL, params=params, timeout=10) # ุฅุถุงูุฉ timeout
            response.raise_for_status()
            return response.text
        except requests.exceptions.RequestException as e:
            logger.error(f"TIGER SMS API request failed with error: {e}, Params: {params}")
            return f"ERROR: API request failed - {e}"

    def get_balance(self):
        params = {'action': 'getBalance'}
        response = self._make_request(params)
        if response.startswith('ACCESS_BALANCE:'):
            balance = response.split(':')[1].strip()
            return {'success': True, 'balance': float(balance)}
        else:
            return {'success': False, 'error': response}

    def get_countries(self, service_name):
        params = {'action': 'getPrices'}
        response = self._make_request(params)
        if response.startswith('ERROR'):
            return {}
        try:
            data = json.loads(response)
            countries = {}
            for country_id, services_info in data.items():
                # ููุงุญุธุฉ: ุชุฃูุฏ ุฃู service_name (ูุซู 'tt' ูุชูู ุชูู) ูุทุงุจู ุงูููุงุชูุญ ูู API
                if service_name in services_info and services_info[service_name].get('count', 0) > 0:
                    countries[country_id] = {
                        'name': self._get_country_name(country_id),
                        'price': services_info[service_name].get('cost'),
                        'count': services_info[service_name].get('count')
                    }
            return countries
        except json.JSONDecodeError:
            logger.error(f"TIGER SMS failed to decode JSON from getPrices: {response}")
            return {}

    def get_number(self, service_name, country_id):
        params = {
            'action': 'getNumber',
            'service': service_name,
            'country': country_id
        }
        response = self._make_request(params)
        if response.startswith('ACCESS_NUMBER:'):
            parts = response.split(':')
            request_id = parts[1].strip()
            phone_number = parts[2].strip()
            return {'success': True, 'id': request_id, 'number': phone_number}
        else:
            # ูููู ุฃู ูููู ุงูุฎุทุฃ ุจุณุจุจ BAD_SERVICE ุฅุฐุง ูุงู ุงุณู ุงูุฎุฏูุฉ (ูุซู 'tt') ุบูุฑ ุตุญูุญ
            logger.warning(f"TIGER SMS getNumber failed: {response}")
            return {'success': False, 'error': response}
            
    def get_code(self, request_id):
        params = {
            'action': 'getStatus',
            'id': request_id
        }
        response = self._make_request(params)
        
        # ๐ข ุชุตุญูุญ ุฏุงูุฉ get_code ููุชุนุงูู ูุน ูู ุงูุญุงูุงุช
        if response.startswith('STATUS_OK:'):
            code = response.split(':')[1].strip()
            return {'success': True, 'code': code}
        elif response == 'STATUS_WAIT_CODE':
            return {'success': False, 'status': 'waiting'}
        elif response == 'STATUS_CANCEL' or response == 'STATUS_FREE':
            # ุงูุทูุจ ููุบู ุฃู ุงูุชูุช ุตูุงุญูุชู (ูุญุชุงุฌ ุฅูู ุฑุฏ ุงููุจูุบ ูููุณุชุฎุฏู)
            return {'success': False, 'status': 'cancelled', 'error': response}
        elif response.startswith('ERROR'):
            return {'success': False, 'status': 'error', 'error': response}
        else:
            return {'success': False, 'status': 'unknown', 'error': response}

    # ๐ข ุฅุถุงูุฉ ุฏุงูุฉ set_status ุงูููููุฏุฉ
    def set_status(self, request_id, status_code):
        """
        ูุชุบููุฑ ุญุงูุฉ ุงูุทูุจ ุนูู Tiger SMS.
        ุงููุชููุน ุงุณุชุฏุนุงุคูุง ูุน status_code=3 ูุชุฃููุฏ ุงุณุชูุงู ุงูููุฏ.
        """
        params = {
            'action': 'setStatus',
            'id': request_id,
            'status': status_code
        }
        response = self._make_request(params)
        
        # ACCESS_READY ูู ุงูุฑุฏ ุงููุชููุน ูููุฌุงุญ ูู ุชุบููุฑ ุงูุญุงูุฉ (ุฎุตูุตุงู ูุฑูุฒ 3)
        if response == 'ACCESS_READY' or response == 'ACCESS_CANCEL': 
            return {'success': True}
        else:
            logger.error(f"TIGER SMS set_status failed for ID {request_id}, Response: {response}")
            return {'success': False, 'error': response}

    def cancel_request(self, request_id):
        # ุงูููุฏ 8 ูุนูู ุฅูุบุงุก ุงูุทูุจ (ุฅุฑุฌุงุน ุงูุฑูู ุฅูู ุงููุฎุฒูู)
        return self.set_status(request_id, 8) 
        
    def _get_country_name(self, country_id):
        # (ุจุงูู ูุงููุณ ุงูุฏูู ููุง ูู)
        countries = {
            '74': 'ุฃูุบุงูุณุชุงู ๐ฆ๐ซ', '155': 'ุฃูุจุงููุง ๐ฆ๐ฑ', '58': 'ุงูุฌุฒุงุฆุฑ ๐ฉ๐ฟ', '76': 'ุฃูุบููุง ๐ฆ๐ด', '181': 'ุฃูุบูููุง ๐ฆ๐ฎ',
            '169': 'ุฃูุชูุฌูุงุจุงุฑุจูุฏุง ๐ฆ๐ฌ', '39': 'ุงูุฃุฑุฌูุชูู ๐ฆ๐ท', '148': 'ุฃุฑููููุง ๐ฆ๐ฒ', '179': 'ุงุฑูุจุง ๐ฆ๐ผ', '175': 'ุงุณุชุฑุงููุง ๐ฆ๐บ',
            '50': 'ุงูููุณุง ๐ฆ๐น', '35': 'ุฃุฐุฑุจูุฌุงู ๐ฆ๐ฟ', '122': 'ุฌุฒุฑ ุงูุจูุงูุง ๐ง๐ธ', '145': 'ุงูุจุญุฑูู ๐ง๐ญ', '60': 'ุจูุบูุงุฏูุด ๐ง๐ฉ',
            '118': 'ุจุฑุจุงุฏูุณ ๐ง๐ง', '51': 'ุจููุงุฑูุณูุง ๐ง๐พ', '82': 'ุจูุฌููุง ๐ง๐ช', '124': 'ุจููุฒ ๐ง๐ฟ', '120': 'ุจููู ๐ง๐ฏ',
            '195': 'ุจุฑููุฏุง ๐ง๐ฒ', '158': 'ุจูุชุงู ๐ง๐น', '92': 'ุจูููููุง ๐ง๐ด', '108': 'ุงูุจูุณูุฉ ๐ง๐ฆ', '123': 'ุจูุชุณูุงูุง ๐ง๐ผ',
            '73': 'ุงูุจุฑุงุฒูู ๐ง๐ท', '121': 'ุจุฑููุงู ๐ง๐ณ', '83': 'ุจูุบุงุฑูุง ๐ง๐ฌ', '152': 'ุจูุฑูููุง ูุงุณู ๐ง๐ซ', '119': 'ุจูุฑููุฏู ๐ง๐ฎ',
            '24': 'ููุจูุฏูุง ๐ฐ๐ญ', '41': 'ุงููุงููุฑูู ๐จ๐ฒ', '36': 'ููุฏุง ๐จ๐ฆ', '186': 'ุงูุฑุฃุณ ุงูุฃุฎุถุฑ ๐จ๐ป', '170': 'ุฌุฒุฑ ูุงููุงู ๐ฐ๐พ',
            '125': 'ุฅูุฑูููุง ุงููุณุทู ๐จ๐ซ', '42': 'ุชุดุงุฏ ๐น๐ฉ', '151': 'ุชุดููู ๐จ๐ฑ', '3': 'ุงูุตูู ๐จ๐ณ', '33': 'ูููููุจูุง ๐จ๐ด',
            '133': 'ุฌุฒุฑ ุงูููุฑ ๐ฐ๐ฒ', '150': 'ุงููููุบู ๐จ๐ฌ', '18': 'ุฏูู ุงููููุบู ๐จ๐ฉ', '93': 'ููุณุชุงุฑููุง ๐จ๐ท', '27': 'ุณุงุญู ุงูุนุงุฌ ๐จ๐ฎ',
            '45': 'ูุฑูุงุชูุง ๐ญ๐ท', '113': 'ููุจุง ๐จ๐บ', '77': 'ูุจุฑุต ๐จ๐พ', '63': 'ุงูุชุดูู ๐จ๐ฟ', '172': 'ุงูุฏููุงุฑู ๐ฉ๐ฐ',
            '168': 'ุฌูุจูุชู ๐ฉ๐ฏ', '126': 'ุฏููููููุง ๐ฉ๐ฒ', '109': 'ุงูุฏููููููุงู ๐ฉ๐ด', '105': 'ุงูุงููุงุฏูุฑ ๐ช๐จ', '21': 'ูุตุฑ ๐ช๐ฌ',
            '101': 'ุณููุงุฏูุฑ ๐ธ๐ป', '167': 'ุบูููุง ุงูุฃุณุชูุงุฆูุฉ ๐ฌ๐ถ', '176': 'ุฅุฑูุชุฑูุง ๐ช๐ท', '34': 'ุฅุณุชูููุง ๐ช๐ช', '71': 'ุฅุซููุจูุง ๐ช๐น',
            '189': 'ููุฌู ๐ซ๐ฏ', '163': 'ููููุฏุง ๐ซ๐ฎ', '78': 'ูุฑูุณุง ๐ซ๐ท', '162': 'ุบููุงูุง ุงููุฑูุณูุฉ ๐ฌ๐ซ', '154': 'ุงูุบุงุจูู ๐ฌ๐ฆ',
            '28': 'ุบุงูุจูุง ๐ฌ๐ฒ', '128': 'ุฌูุฑุฌูุง ๐ฌ๐ช', '43': 'ุงููุงููุง ๐ฉ๐ช', '38': 'ุบุงูุง ๐ฌ๐ญ', '201': 'ุฌุจู ุทุงุฑู ๐ฌ๐ฎ',
            '129': 'ุงููููุงู ๐ฌ๐ท', '127': 'ุบุฑููุงุฏุง ๐ฌ๐ฉ', '160': 'ุฌูุงุฏููุจ ๐ฌ๐ต', '94': 'ุบูุงุชููุงูุง ๐ฌ๐น', '68': 'ุบูููุง ๐ฌ๐ณ',
            '130': 'ุบูููุง ุจูุณุงู ๐ฌ๐ผ', '131': 'ุบูุงูุง ๐ฌ๐พ', '26': 'ูุงูุชู ๐ญ๐น', '88': 'ููุฏูุฑุงุณ ๐ญ๐ณ', '14': 'ูููุบ ูููุบ ๐ญ๐ฐ',
            '84': 'ููุบุงุฑูุง ๐ญ๐บ', '132': 'ุฃูุณููุฏุง ๐ฎ๐ธ', '22': 'ุงูููุฏ ๐ฎ๐ณ', '6': 'ุฅูุฏูููุณูุง ๐ฎ๐ฉ', '57': 'ุฅูุฑุงู ๐ฎ๐ท',
            '47': 'ุงูุนุฑุงู ๐ฎ๐ถ', '23': 'ุฃูุฑููุฏุง ๐ฎ๐ช', '13': 'ุฅุณุฑุงุฆูู ๐ฎ๐ฑ', '86': 'ุฅูุทุงููุง ๐ฎ๐น', '103': 'ุฌุงูุงููุง ๐ฏ๐ฒ',
            '182': 'ุงููุงุจุงู ๐ฏ๐ต', '116': 'ุงูุฃุฑุฏู ๐ฏ๐ด', '2': 'ูุงุฒุงุฎุณุชุงู ๐ฐ๐ฟ', '8': 'ููููุง ๐ฐ๐ช', '190': 'ููุฑูุง ุงูุฌููุจูุฉ ๐ฐ๐ท',
            '203': 'ููุณููู ๐ฝ๐ฐ', '100': 'ุงููููุช ๐ฐ๐ผ', '11': 'ููุฑุบูุฒุณุชุงู ๐ฐ๐ฌ', '25': 'ูุงูุณ ๐ฑ๐ฆ', '49': 'ูุงุชููุง ๐ฑ๐ป',
            '153': 'ูุจูุงู ๐ฑ๐ง', '136': 'ููุณูุชู ๐ฑ๐ธ', '135': 'ููุจูุฑูุง ๐ฑ๐ท', '102': 'ููุจูุง ๐ฑ๐พ', '44': 'ููุชูุงููุง ๐ฑ๐น',
            '165': 'ูููุณูุจูุฑุบ ๐ฑ๐บ', '20': 'ูุงูุงู ๐ฒ๐ด', '183': 'ุดูุงู ููุฏูููุง ๐ฒ๐ฐ', '17': 'ูุฏุบุดูุฑ ๐ฒ๐ฌ', '137': 'ููุงูู ๐ฒ๐ผ',
            '7': 'ูุงููุฒูุง ๐ฒ๐พ', '159': 'ุงููุงูุฏูู ๐ฒ๐ป', '69': 'ูุงูู ๐ฒ๐ฑ', '199': 'ูุงูุทุง ๐ฒ๐น', '114': 'ููุฑูุชุงููุง ๐ฒ๐ท',
            '157': 'ููุฑูุดููุณ ๐ฒ๐บ', '54': 'ุงูููุณูู ๐ฒ๐ฝ', '85': 'ูููุฏููุง ๐ฒ๐ฉ', '144': 'ูููุงูู ๐ฒ๐จ', '72': 'ููุบูููุง ๐ฒ๐ณ',
            '171': 'ุงูุฌุจู ุงูุฃุณูุฏ ๐ฒ๐ช', '180': 'ูููุชุณูุฑุงุช ๐ฒ๐ธ', '37': 'ุงููุบุฑุจ ๐ฒ๐ฆ', '80': 'ููุฒูุจูู ๐ฒ๐ฟ', '5': 'ููุงููุงุฑ ๐ฒ๐ฒ',
            '138': 'ูุงููุจูุง ๐ณ๐ฆ', '81': 'ููุจุงู ๐ณ๐ต', '48': 'ููููุฏุง ๐ณ๐ฑ', '185': 'ูุงููุฏูููุง ๐ณ๐จ', '67': 'ูููุฒูููุฏุง ๐ณ๐ฟ',
            '90': 'ูููุงุฑุงุบูุง ๐ณ๐ฎ', '139': 'ุงูููุฌุฑ ๐ณ๐ช', '19': 'ููุฌูุฑูุง ๐ณ๐ฌ', '174': 'ุงููุฑููุฌ ๐ณ๐ด', '107': 'ุนูุงู ๐ด๐ฒ',
            '66': 'ุจุงูุณุชุงู ๐ต๐ฐ', '188': 'ููุณุทูู ๐ต๐ธ', '112': 'ุจููุง ๐ต๐ฆ', '79': 'ุจุงุจู ๐ต๐ฌ', '87': 'ุจุงุฑุงุบูุงู ๐ต๐พ',
            '65': 'ุจูุฑู ๐ต๐ช', '4': 'ุงูููุจูู ๐ต๐ญ', '15': 'ุจูููุฏุง ๐ต๐ฑ', '117': 'ุงูุจุฑุชุบุงู ๐ต๐น', '97': 'ุจูุฑุชูุฑููู ๐ต๐ท',
            '111': 'ูุทุฑ ๐ถ๐ฆ', '146': 'ุฌูุน-ุดูู ๐ซ๐ท', '32': 'ุฑููุงููุง ๐ท๐ด', '0': 'ุฑูุณูุง ๐ท๐บ', '140': 'ุฑูุงูุฏุง ๐ท๐ผ',
            '134': 'ุณุงูุชููุชุณ ๐ฐ๐ณ', '164': 'ููุณูุง ๐ฑ๐จ', '166': 'ุฌุฒุฑ ุบุฑููุงุฏูู ๐ป๐จ', '198': 'ุณุงููุง ๐ผ๐ธ', '178': 'ุจุฑููุณูุจู ๐ธ๐น',
            '53': 'ุงูุณุนูุฏูุฉ ๐ธ๐ฆ', '61': 'ุงูุณูุบุงู ๐ธ๐ณ', '29': 'ุตุฑุจูุง ๐ท๐ธ', '184': 'ุณูุดูู ๐ธ๐จ', '115': 'ุณูุฑุงูููู ๐ธ๐ฑ',
            '196': 'ุณูุบุงููุฑุฉ ๐ธ๐ฌ', '141': 'ุณูููุงููุง ๐ธ๐ฐ', '59': 'ุณููููููุง ๐ธ๐ฎ', '193': 'ุฌุฒุฑ ุณูููุงู ๐ธ๐ง', '149': 'ุงูุตููุงู ๐ธ๐ด',
            '31': 'ุฌููุจ ุฅูุฑูููุง ๐ฟ๐ฆ', '177': 'ุฌููุจ ุงูุณูุฏุงู ๐ธ๐ธ', '56': 'ุงุณุจุงููุง ๐ช๐ธ', '64': 'ุณุฑููุงููุง ๐ฑ๐ฐ', '98': 'ุงูุณูุฏุงู ๐ธ๐ฉ',
            '142': 'ุณูุฑููุงู ๐ธ๐ท', '106': 'ุณูุงุฒููุงูุฏ ๐ธ๐ฟ', '46': 'ุงูุณููุฏ ๐ธ๐ช', '173': 'ุณููุณุฑุง ๐จ๐ญ', '110': 'ุณูุฑูุง ๐ธ๐พ',
            '55': 'ุชุงููุงู ๐น๐ผ', '143': 'ุทุงุฌููุณุชุงู ๐น๐ฏ', '9': 'ุชูุฒุงููุง ๐น๐ฟ', '52': 'ุชุงููุงูุฏ ๐น๐ญ', '91': 'ุชูููุฑ ๐น๐ฑ',
            '99': 'ุชูุฌู ๐น๐ฌ', '197': 'ุชููุบุง ๐น๐ด', '104': 'ุชุฑูููุฏุงุฏ ๐น๐น', '89': 'ุชููุณ ๐น๐ณ', '62': 'ุชุฑููุง ๐น๐ท',
            '161': 'ุชุฑููุงูุณุชุงู ๐น๐ฒ', '75': 'ุฃูุบูุฏุง ๐บ๐ฌ', '1': 'ุฃููุฑุงููุง ๐บ๐ฆ', '95': 'ุงูุฅูุงุฑุงุช ๐ฆ๐ช', '16': 'ุจุฑูุทุงููุง ๐ฌ๐ง',
            '187': 'ุฃูุฑููุง ๐บ๐ธ', '1001': 'ุฃูุฑููุง VIP', '12': 'ุฃูุฑููุง ุงูุชุฑุงุถู', '156': 'ุงูุฑูุบูุงู ๐บ๐พ', '40': 'ุฃูุฒุจูุณุชุงู ๐บ๐ฟ',
            '70': 'ููุฒูููุง ๐ป๐ช', '10': 'ููุชูุงู ๐ป๐ณ', '30': 'ุงูููู ๐พ๐ช', '147': 'ุฒุงูุจูุง ๐ฟ๐ฒ', '96': 'ุฒููุจุงุจูู ๐ฟ๐ผ'
        }
        return countries.get(str(country_id), 'ุบูุฑ ูุนุฑูู')
